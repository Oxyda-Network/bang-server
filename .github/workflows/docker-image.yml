name: Build and Release

on:
  push:
    tags:
      - 'alpha*'
      - 'beta*'
      - 'v*'

env:
  BUILD_TYPE: Release
  BUILD_PARALLEL_JOBS: 6

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Install packages
      shell: bash
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get -y update
        sudo apt-get -y install gcc-11 g++-11 cmake ninja-build libfmt-dev libcxxopts-dev librange-v3-dev

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_C_COMPILER=gcc-11
        -DCMAKE_CXX_COMPILER=g++-11
        -DBUILD_GAME_RELEASE=ON
        -G Ninja
      
    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}
      run: cmake --build build -j ${{ env.BUILD_PARALLEL_JOBS }} --config ${{env.BUILD_TYPE}}
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: ${{contains(github.ref, 'alpha')}}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/bangserver
        asset_name: bangserver
        asset_content_type: application/x-binary