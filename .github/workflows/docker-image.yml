name: Docker Image

on:
  push:
    branches:
      - release

env:
  BUILD_TYPE: Release
  AWS_REGION: eu-south-1
  ECR_REPOSITORY: bang-server-repository
  ECS_SERVICE: bang-server-service
  ECS_CLUSTER: bang-server-cluster
  ECS_TASK_DEFINITION: .aws/bang-server-task.json
  CONTAINER_NAME: bang-server-container
  IMAGE_TAG: bang-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Install packages
      shell: bash
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get -y update
        sudo apt-get -y install gcc-11 g++-11 cmake ninja-build libfmt-dev

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_C_COMPILER=gcc-11
        -DCMAKE_CXX_COMPILER=g++-11
        -DBUILD_GAME_RELEASE=ON
        -G Ninja
      
    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true